class BadPollSDK {
  constructor({ creatorStakeKey: e }) {
    ;(this.creatorStakeKey = e),
      (this.frontUrl = 'https://poll.badfoxmc.com/sdk'),
      (this.supportedWallets = ['begin', 'eternl', 'flint', 'nami', 'nufi', 'gerowallet', 'typhoncip30'])
  }
  loadWallets = async (e) => {
    let { injectId: t, buttonBackgroundColor: r = '#f5f5f5', buttonTextColor: a = '#00000' } = e || {}
    if (!t)
      throw Error(
        '400 BAD REQUEST; new BadPollSDK({ creatorStakeKey: "stake1..." }).loadWallets({ injectId: "inject-wallets" })'
      )
    let i = window?.cardano || {},
      s = this.supportedWallets
        .filter((e) => void 0 !== i[e])
        .map((e) => ({ name: i[e].name, icon: i[e].icon, version: i[e].apiVersion, apiName: e })),
      n = document.getElementById(t)
    n.innerText = ''
    let o = document.createElement('div')
    s.forEach((e) => {
      let t = document.createElement('img')
      ;(t.src = e.icon), (t.style = 'width: 30px; height: 30px; margin: 0 0.5rem 0 0;')
      let i = document.createElement('span')
      i.innerText = e.name
      let s = document.createElement('button')
      ;(s.style = `width: 150px; height: 2.5rem; margin: 0.1rem; white-space: nowrap; color: ${a}; background-color: ${r}; border: none; border-radius: 0.5rem;`),
        s.appendChild(t),
        s.appendChild(i),
        (s.onclick = async () => {
          await this.connectAndStart(e.apiName), (n.innerText = '')
        }),
        o.appendChild(s)
    }),
      n.appendChild(o)
  }
  connectAndStart = async (e) => {
    let t = window?.cardano[e]
    if (t) {
      let r = await t.enable(),
        a = await r.getRewardAddresses()
      this.start({ voterStakeKey: a[0] })
    } else window.alert(`${e} not installed :(`)
  }
  start({ voterStakeKey: e } = {}) {
    if (!document || !document.body) throw Error('document.body is not defined')
    if (!this.creatorStakeKey || !e)
      throw Error(
        '400 BAD REQUEST; new BadPollSDK({ creatorStakeKey: "stake1..." }).start({ voterStakeKey: "stake1..." })'
      )
    let t = `?creator_stake_key=${this.creatorStakeKey}&voter_stake_key=${e}`,
      r = this.frontUrl + t,
      a = window.innerWidth <= 768
    ;(this.iFrameWrapper = document.createElement('div')),
      this.iFrameWrapper.setAttribute('id', 'bad-poll-iframe-wrapper'),
      this.iFrameWrapper.setAttribute(
        'style',
        'width: 100vw; height: 100vh; background-color: rgba(0, 0, 0, 0.5); border: none; display: flex; align-items: center; justify-content: center; position: fixed; top: 0; left: 0; z-index: 999999'
      ),
      (this.iFrame = document.createElement('iframe')),
      this.iFrame.setAttribute('id', 'bad-poll-iframe'),
      this.iFrame.setAttribute('src', r),
      this.iFrame.setAttribute(
        'style',
        `max-width: ${a ? '100vw' : '555px'}; width: 100%; max-height: ${
          a ? '100vh' : '70vh'
        }; height: 100%; border: none; border-radius: ${a ? '0' : '1rem'}; box-shadow: 0 0 2px #fff;`
      ),
      (this.iFrame = this.iFrameWrapper.appendChild(this.iFrame)),
      (this.iFrameWrapper = document.body.appendChild(this.iFrameWrapper)),
      window.addEventListener('message', ({ origin: e, data: t }) => {
        'bad-poll-close' === t && this.stop()
      })
  }
  stop() {
    ;(this.iFrame = this.iFrameWrapper.removeChild(this.iFrame)),
      (this.iFrameWrapper = document.body.removeChild(this.iFrameWrapper))
  }
}
